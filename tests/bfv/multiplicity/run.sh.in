#!/bin/bash

#
#    (C) Copyright 2019 CEA LIST. All Rights Reserved.
#    Contributor(s): Cingulata team (formerly Armadillo team)
#
#    This software is governed by the CeCILL-C license under French law and
#    abiding by the rules of distribution of free software.  You can  use,
#    modify and/ or redistribute the software under the terms of the CeCILL-C
#    license as circulated by CEA, CNRS and INRIA at the following URL
#    "http://www.cecill.info".
#
#    As a counterpart to the access to the source code and  rights to copy,
#    modify and redistribute granted by the license, users are provided only
#    with a limited warranty  and the software's author,  the holder of the
#    economic rights,  and the successive licensors  have only  limited
#    liability.
#
#    The fact that you are presently reading this means that you have had
#    knowledge of the CeCILL-C license and that you accept its terms.
#

CIRCUIT=@CIRCUIT@
APPS_DIR=@APPS_DIR@
$APPS_DIR/generate_keys

mkdir -p input
rm -f input/*.ct

mkdir -p output
rm -f output/*.ct

LIST_SIZE=@LIST_SIZE@

# Convert an IPv4 adress to its decimal equivalent.
ipv4dec ()
{
	declare -i a b c d;
	IFS=. read a b c d <<<"$1";
	echo $(((a<<24)+(b<<16)+(c<<8)+d));
}

# Generate keys
echo "FHE key generation"
$APPS_DIR/generate_keys

echo "Input encryption"
NR_THREADS=$(nproc)

$APPS_DIR/encrypt -v --public-key fhe_key.pk   `$APPS_DIR/helper --bit-cnt 32 --msb-first --prefix input/a_ --idx-places 0 $(ipv4dec $1)` --threads $NR_THREADS

#$APPS_DIR/encrypt -v --public-key fhe_key.pk   `$APPS_DIR/helper --bit-cnt 32 --msb-first --prefix input/b_ --idx-places 0  $(head -$LIST_SIZE plaintext/ipv4.dat | while read IP; do ipv4dec $IP; done  | xargs | sed "s/ ---- /\n---- /g")` --threads $NR_THREADS

head -$LIST_SIZE plaintext/ipv4.dat > reduce_list
declare -i j=0
while read  IP
do
	$APPS_DIR/encrypt -v --public-key fhe_key.pk `$APPS_DIR/helper --bit-cnt 32 --msb-first --prefix input/b_"$j"_ --idx-places 0  $(ipv4dec $IP)| xargs | sed "s/ ---- /\n---- /g"` --threads $NR_THREADS
	j="$j +1"
    #echo $j
done < reduce_list

echo "Homomorphic execution..."
time $APPS_DIR/blif_exec $CIRCUIT --threads $NR_THREADS

echo "Output decryption"
OUT_FILES=`ls -v output/*`
$APPS_DIR/helper --from-bin --bit-cnt 8 `$APPS_DIR/decrypt  $OUT_FILES`

ls -l --human-readable output

#!/bin/bash

#
#    (C) Copyright 2017 CEA LIST. All Rights Reserved.
#    Contributor(s): Cingulata team (formerly Armadillo team)
#
#    This software is governed by the CeCILL-C license under French law and
#    abiding by the rules of distribution of free software.  You can  use,
#    modify and/ or redistribute the software under the terms of the CeCILL-C
#    license as circulated by CEA, CNRS and INRIA at the following URL
#    "http://www.cecill.info".
#
#    As a counterpart to the access to the source code and  rights to copy,
#    modify and redistribute granted by the license, users are provided only
#    with a limited warranty  and the software's author,  the holder of the
#    economic rights,  and the successive licensors  have only  limited
#    liability.
#
#    The fact that you are presently reading this means that you have had
#    knowledge of the CeCILL-C license and that you accept its terms.
#



# To search exactly a x-length ASCII word in a list of y x-lenght words (sensitive-case)

# Requirements
# list do not contain several times the same item
# list contain list_size elements or more but not less
# request word and items in the list contain EXACTLY nb_char elements not more, not less

NB_CHARS=@NB_CHARS@ #we store data on NB_CHARS Integer8
LIST_SIZE=@LIST_SIZE@
REQUEST=$1
LIST_FILE="countries$NB_CHARS"

echo NB_CHARS=$NB_CHARS REQUEST=$REQUEST LIST_FILE=$LIST_FILE LIST_SIZE=$LIST_SIZE

CURR_DIR=$PWD
FILE=ASCII
APPS_DIR=$CURR_DIR/../../apps/

mkdir -p input
rm -f input/*.ct

mkdir -p output
rm -f output/*.ct

# Precomputation consists in transforming x-lenght words into x Integer8 using ASCII encoding

decimal()
{
 echo -n "$1" | od -A n -t d1 | sed "s/ \+/ /g" | cut -c2-
}

words2decimal()
{
	while read word; do decimal "$word"; done <<< "$first_rows" # <<< to read from a variable rather than a file
}

# Generate keys
echo "FHE key generation"
$APPS_DIR/generate_keys

echo "Input encryption"
NR_THREADS=$(nproc)


decimalRequest=$(decimal "$REQUEST")

first_rows="$(sed -n 1,"$LIST_SIZE"p < plaintext/$LIST_FILE)"
decimalList=$(echo  $(words2decimal))

$APPS_DIR/encrypt -v `$APPS_DIR/helper --bit-cnt 8 $decimalRequest $decimalList` --threads $NR_THREADS

echo "Homomorphic execution..."
time $APPS_DIR/dyn_omp $FILE'-opt.blif' --threads $NR_THREADS # -v

echo "Output decryption"
OUT_FILES=`ls -v output/*`
$APPS_DIR/helper --from-bin --bit-cnt 1 `$APPS_DIR/decrypt --threads $NR_THREADS  $OUT_FILES `

# To see size of output ciphertext
ls -l --human-readable output


echo NB_CHARS=$NB_CHARS REQUEST=$REQUEST LIST_FILE=$LIST_FILE LIST_SIZE=$LIST_SIZE

NB_ENCRYPTED_BITS=$((8*($LIST_SIZE+1)*NB_CHARS)) # +1 with request word
echo NB_ENCRYPTED_BITS=$NB_ENCRYPTED_BITS

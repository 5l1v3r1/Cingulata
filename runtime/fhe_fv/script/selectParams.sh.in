#!/bin/bash

# -*- coding: utf-8 -*-
#
#    (C) Copyright 2018 CEA LIST. All Rights Reserved.
#    Contributor(s): Cingulata team (formerly Armadillo team)
#
#    This software is governed by the CeCILL-C license under French law and
#    abiding by the rules of distribution of free software.  You can  use,
#    modify and/ or redistribute the software under the terms of the CeCILL-C
#    license as circulated by CEA, CNRS and INRIA at the following URL
#    "http://www.cecill.info".
#
#    As a counterpart to the access to the source code and  rights to copy,
#    modify and redistribute granted by the license, users are provided only
#    with a limited warranty  and the software's author,  the holder of the
#    economic rights,  and the successive licensors  have only  limited
#    liability.
#
#    The fact that you are presently reading this means that you have had
#    knowledge of the CeCILL-C license and that you accept its terms.
#



# callers: tests/<test-name>/CMakeLists.txt during make

# positional parameters
TEST_NAME=$1
MUL_DEPTH=$2
MODEL=$3
MIN_SECU=$4
POLITIC=$5
MODE="static"
# interactive mode indicates the user is ready to interact via yad to make a second choice if no parameter set is found with given constraints.
# static mode indicates the user prefers no interaction during compilation phase.

function print() # syntax: print VAR1 ... VARN
{
        for  arg in "$@"
        do
            echo "$arg"="$(eval "echo \$$arg")"
        done

}
#Color text
DEFAULT_ZEN='\e[m'
CYAN_WARNING='\e[0;36m'
RED_ERROR='\e[0;31m'
GREEN_OK="\e[00;32m"



#directories
RUN_DIR=$(pwd)
cd ../../ || exit
BUILD_DIR=$(pwd)
cd .. || exit
CINGU_PARAM_DIR=@CINGU_PARAM_DIR@
source ${CINGU_PARAM_DIR}/generateParam/defaultPolitic.sh
default_politic ${POLITIC} # To define PRIVATE_KEY_DISTRIB and SECURITY_REDUCTION

# To check if private key distribution is binary as needed in Cingulata
lower_bound=$(eval echo $PRIVATE_KEY_DISTRIB | cut -d, -f1)
upper_bound=$(eval echo $PRIVATE_KEY_DISTRIB | cut -d, -f2)
if [ ${lower_bound}  -ne 0 ] || [ ${upper_bound}  -ne 1 ]
then 
        echo -e "${RED_ERROR}POLITIC=${POLITIC} uses PRIVATE_KEY_DISTRIB=${PRIVATE_KEY_DISTRIB}."
        echo "Please choose a politic with a binary distribution."
        echo "Politics are defined in CinguParam/generateParam/defaultParam.sh."
        echo -e "Politic is chosen in tests/CMakeLists.txt.${DEFAULT_ZEN}"
        exit 2 # Incompatible private key distribution
fi



if [ ! "$(ls -A "${CINGU_PARAM_DIR}")" ] ; then
   echo -e "${RED_ERROR}The submodule CinguParam is not initialized.${DEFAULT_ZEN}"
   exit 1
fi

PARAM_DIR=${CINGU_PARAM_DIR}/storeParam

#print BASE_DIR PARAM_DIR RUN_DIR BUILD_DIR


XML_PARAMS=fhe_params.xml
HEAD_ID=$(git ls-remote https://bitbucket.org/malb/lwe-estimator.git HEAD | awk '{print $1}' | cut -c-7 ) # to determine lwe-estimator HEAD commit ID
COMMIT_ID="$(awk '{w=$1} END{print w}' "${PARAM_DIR}"/commit.log)" # to determine using LWE-Estimator commit ID in database

PLAINTEXT_MODULUS=2 # Cingulata operates on binary ciphertexts.
DB_DIR="${PARAM_DIR}/${HEAD_ID}/${POLITIC}"

DESIRED_PARAMS="${DB_DIR}/${MUL_DEPTH}_${MODEL}_${MIN_SECU}_${PLAINTEXT_MODULUS}"





# select static choice parameters with:
# * mul.depth or mul. depth + 1
# * given bkz reduction cost model
# * secu in the interval [lambda-8,lambda+64]
static_choice()
{
  cd "${PARAM_DIR}/$1/" || exit
  for file in *
  do
        depth=$(echo "${file}" | awk -F'[_]' '{print $1}')  # print multiplicative depth
        model=$(echo "${file}" | sed 's/[0-9]//g' | sed 's/^_//' | sed 's/_$// ' | sed 's/_$// ') # print bkz reduction cost model
        secu=$(echo "${file}" | awk -F'[_]' '{print $((NF-1))}') # print approximated security
        pt_modulus=$(echo "${file}" | awk -F'[_]' '{print $NF}') # print plaintext modulus        
        if [ $((depth)) -eq $((MUL_DEPTH))  ] && [ "${secu}" -ge $((MIN_SECU)) ] && [ "${secu}" -le $((MIN_SECU+64)) ] && [ "${model}" == ${MODEL} ] && [ $((pt_modulus)) -eq $((PLAINTEXT_MODULUS))  ]  
        then
                sublist+=( "${file}" )
        fi
        
        
  done
  echo DESIRED_PARAMS="$(echo "${DESIRED_PARAMS}"| rev | cut -d/ -f1 | rev)"
  if [ ${#sublist[@]} -ne 0 ]
  then
    STATIC_CHOICE=${sublist[0]} # choose arbitrarily first element in sublist.
else
    echo -e "${CYAN_WARNING}No parameter found with static mode. Automatically switch to interactive mode.${DEFAULT_ZEN}"
    MODE=interactive
    PREVIOUS_MODE=static
    print MODE
fi


}

print TEST_NAME
if [ -f "${DESIRED_PARAMS}" ]
then
        echo -ne "${GREEN_OK}Parameter set automatically found in CinguParam: ${DEFAULT_ZEN}"
        cp -v "${DESIRED_PARAMS}" "${RUN_DIR}/${XML_PARAMS}" 2>/dev/null
else
        print MODE
        if [ $MODE = "static" ]
        then
                if [ -d "${DB_DIR}" ]
                then
                        echo -e "${CYAN_WARNING}No parameter set found for test ${TEST_NAME} with (multiplicative_depth=${MUL_DEPTH},reduction_cost_model=${MODEL},desired_security_level=${MIN_SECU},politic=${POLITIC}).${DEFAULT_ZEN}"
                        echo "Compute alternative choice..."
                        static_choice "${HEAD_ID}/${POLITIC}"
                else
                        echo -e "${CYAN_WARNING}The parameters with lwe-estimator commit ${HEAD_ID} are not in CinguParam.${DEFAULT_ZEN}"
                        static_choice "${COMMIT_ID}/${POLITIC}"
                fi
                if [ -n "${STATIC_CHOICE}" ]
                then
                        echo "STATIC_CHOICE=${STATIC_CHOICE} (using LWE-Estimator commit=${COMMIT_ID})"
                        echo -ne "${GREEN_OK}Parameter set automatically found in CinguParam: ${DEFAULT_ZEN}"
                        cp -v "${STATIC_CHOICE}" "${RUN_DIR}/${XML_PARAMS}" 2>/dev/null
                fi
        fi
        if [ $MODE = "interactive" ]
        then
                if [ -d "${DB_DIR}/" ]
                then
                        if [ -z "${PREVIOUS_MODE}" ]
                        then
                                echo -e "${CYAN_WARNING}No parameter set found for test ${TEST_NAME} with given triplet (multiplicative_depth=${MUL_DEPTH},reduction_cost_model=${MODEL},desired_security_level=${MIN_SECU},politic=${POLITIC}).${DEFAULT_ZEN}"
                        fi
                        read -p "Press <ENTER> to select a parameter set." -r
                        cd "${DB_DIR}"  || exit
                        INTERACTIVE_CHOICE=$(yad --text "Multiplicative depth of circuit ${TEST_NAME} is ${MUL_DEPTH}." --file-selection --title "Filename syntax: multiplicative-depth_BKZ-reduction-cost-model_desired-security-level-pt_modulus." --file-filter="${MUL_DEPTH}_*_${PLAINTEXT_MODULUS} $((MUL_DEPTH+1))_*_${PLAINTEXT_MODULUS} $((MUL_DEPTH+2))_*_${PLAINTEXT_MODULUS}")
                        print INTERACTIVE_CHOICE
                        if [ -f "${INTERACTIVE_CHOICE}" ] && [ ! -z "${INTERACTIVE_CHOICE}" ]
                        then
                                echo -ne "${GREEN_OK}Parameter set found in CinguParam: ${DEFAULT_ZEN}"
                                cp -v "${INTERACTIVE_CHOICE}" "${RUN_DIR}/${XML_PARAMS}" 2>/dev/null
                        else
                                echo -e "${RED_ERROR}Invalid choice. You can generate suitable parameter sets using CinguParam module. ${DEFAULT_ZEN}" # It happens for L>20 since there is no corresponding paramset in CinguParam.
                                exit 0
                        fi
                else
                        if [ -z "${PREVIOUS_MODE}" ]
                        then
                                echo -e "${CYAN_WARNING}The parameters with lwe-estimator commit ${HEAD_ID} are not in CinguParam. See CinguParam wiki to update the database.${DEFAULT_ZEN}"
                        fi
                        PS3='Please enter your choice: '
                        options=("Select a parameter set in CinguParam (using LWE-Estimator commit=${COMMIT_ID})"  "Quit")
                        select REPLY in "${options[@]}"
                        do
                            case ${REPLY} in
                                "Select a parameter set in CinguParam (using LWE-Estimator commit=${COMMIT_ID})")
                                    cd "${PARAM_DIR}/${COMMIT_ID}/${POLITIC}" || exit
                                    INTERACTIVE_CHOICE=$(yad --text "Multiplicative depth of circuit ${TEST_NAME} is ${MUL_DEPTH}." --file-selection --title "Filename syntax: multiplicative-depth_BKZ-reduction-cost-model_desired-security-level-pt_modulus." --file-filter="${MUL_DEPTH}_*_${PLAINTEXT_MODULUS} $((MUL_DEPTH+1))_*_${PLAINTEXT_MODULUS} $((MUL_DEPTH+2))_*_${PLAINTEXT_MODULUS}" )
                                    print INTERACTIVE_CHOICE COMMIT_ID
                                    if [ -f "${INTERACTIVE_CHOICE}" ] && [ ! -z "${INTERACTIVE_CHOICE}" ]
                                    then
                                        echo -ne "${GREEN_OK}Parameter set found in CinguParam: ${DEFAULT_ZEN}"
                                        cp -v "${INTERACTIVE_CHOICE}" "${RUN_DIR}/${XML_PARAMS}" 2>/dev/null
                                    else
                                        echo -e "${RED_ERROR}Invalid choice. You can generate suitable parameter sets using CinguParam module. ${DEFAULT_ZEN}" # It happens for L>20 since there is no corresponding paramset in CinguParam.
                                        exit 0
                                    fi
                                    break
                                    ;;
                                "Quit")
                                    break
                                    ;;
                                *) echo "invalid option ${REPLY}";;
                            esac
                        done
                fi
        fi
fi




